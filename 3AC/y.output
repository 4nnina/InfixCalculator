Terminals unused in grammar

    '^'


Grammar

    0 $accept: lines $end

    1 lines: lines line
    2      | line

    3 line: EXIT
    4     | PRINTLETTER
    5     | expr '\n'
    6     | LETTER '=' expr '\n'
    7     | bexpr '\n'

    8 $@1: %empty

    9 $@2: %empty

   10 line: IF bexpr $@1 THEN expr ELSE $@2 expr '\n'

   11 bexpr: expr MEQUAL expr
   12      | expr GEQUAL expr
   13      | expr '<' expr
   14      | expr '>' expr
   15      | expr EQUAL expr
   16      | expr NOTEQUAL expr
   17      | '(' bexpr ')'
   18      | BOOLEAN

   19 expr: expr '+' expr
   20     | expr '-' expr
   21     | expr '*' expr
   22     | expr '/' expr
   23     | expr '%' expr
   24     | '(' expr ')'
   25     | INTEGER
   26     | LETTER


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 5 6 7 10
    '%' (37) 23
    '(' (40) 17 24
    ')' (41) 17 24
    '*' (42) 21
    '+' (43) 19
    '-' (45) 20
    '/' (47) 22
    '<' (60) 13
    '=' (61) 6
    '>' (62) 14
    '^' (94)
    error (256)
    INTEGER <number> (258) 25
    LETTER <letter> (259) 6 26
    PRINTLETTER <letter> (260) 4
    BOOLEAN <boolean> (261) 18
    EQUAL (262) 15
    NOTEQUAL (263) 16
    MEQUAL (264) 11
    GEQUAL (265) 12
    IF (266) 10
    THEN (267) 10
    ELSE (268) 10
    EXIT (269) 3


Nonterminals, with rules where they appear

    $accept (27)
        on left: 0
    lines (28)
        on left: 1 2
        on right: 0 1
    line <produzione> (29)
        on left: 3 4 5 6 7 10
        on right: 1 2
    $@1 (30)
        on left: 8
        on right: 10
    $@2 (31)
        on left: 9
        on right: 10
    bexpr <produzione> (32)
        on left: 11 12 13 14 15 16 17 18
        on right: 7 10 17
    expr <produzione> (33)
        on left: 19 20 21 22 23 24 25 26
        on right: 5 6 10 11 12 13 14 15 16 19 20 21 22 23 24


State 0

    0 $accept: . lines $end

    INTEGER      shift, and go to state 1
    LETTER       shift, and go to state 2
    PRINTLETTER  shift, and go to state 3
    BOOLEAN      shift, and go to state 4
    IF           shift, and go to state 5
    EXIT         shift, and go to state 6
    '('          shift, and go to state 7

    lines  go to state 8
    line   go to state 9
    bexpr  go to state 10
    expr   go to state 11


State 1

   25 expr: INTEGER .

    $default  reduce using rule 25 (expr)


State 2

    6 line: LETTER . '=' expr '\n'
   26 expr: LETTER .

    '='  shift, and go to state 12

    $default  reduce using rule 26 (expr)


State 3

    4 line: PRINTLETTER .

    $default  reduce using rule 4 (line)


State 4

   18 bexpr: BOOLEAN .

    $default  reduce using rule 18 (bexpr)


State 5

   10 line: IF . bexpr $@1 THEN expr ELSE $@2 expr '\n'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    BOOLEAN  shift, and go to state 4
    '('      shift, and go to state 7

    bexpr  go to state 14
    expr   go to state 15


State 6

    3 line: EXIT .

    $default  reduce using rule 3 (line)


State 7

   17 bexpr: '(' . bexpr ')'
   24 expr: '(' . expr ')'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    BOOLEAN  shift, and go to state 4
    '('      shift, and go to state 7

    bexpr  go to state 16
    expr   go to state 17


State 8

    0 $accept: lines . $end
    1 lines: lines . line

    $end         shift, and go to state 18
    INTEGER      shift, and go to state 1
    LETTER       shift, and go to state 2
    PRINTLETTER  shift, and go to state 3
    BOOLEAN      shift, and go to state 4
    IF           shift, and go to state 5
    EXIT         shift, and go to state 6
    '('          shift, and go to state 7

    line   go to state 19
    bexpr  go to state 10
    expr   go to state 11


State 9

    2 lines: line .

    $default  reduce using rule 2 (lines)


State 10

    7 line: bexpr . '\n'

    '\n'  shift, and go to state 20


State 11

    5 line: expr . '\n'
   11 bexpr: expr . MEQUAL expr
   12      | expr . GEQUAL expr
   13      | expr . '<' expr
   14      | expr . '>' expr
   15      | expr . EQUAL expr
   16      | expr . NOTEQUAL expr
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    EQUAL     shift, and go to state 21
    NOTEQUAL  shift, and go to state 22
    MEQUAL    shift, and go to state 23
    GEQUAL    shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '*'       shift, and go to state 27
    '/'       shift, and go to state 28
    '%'       shift, and go to state 29
    '\n'      shift, and go to state 30
    '<'       shift, and go to state 31
    '>'       shift, and go to state 32


State 12

    6 line: LETTER '=' . expr '\n'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 34


State 13

   26 expr: LETTER .

    $default  reduce using rule 26 (expr)


State 14

   10 line: IF bexpr . $@1 THEN expr ELSE $@2 expr '\n'

    $default  reduce using rule 8 ($@1)

    $@1  go to state 35


State 15

   11 bexpr: expr . MEQUAL expr
   12      | expr . GEQUAL expr
   13      | expr . '<' expr
   14      | expr . '>' expr
   15      | expr . EQUAL expr
   16      | expr . NOTEQUAL expr
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    EQUAL     shift, and go to state 21
    NOTEQUAL  shift, and go to state 22
    MEQUAL    shift, and go to state 23
    GEQUAL    shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '*'       shift, and go to state 27
    '/'       shift, and go to state 28
    '%'       shift, and go to state 29
    '<'       shift, and go to state 31
    '>'       shift, and go to state 32


State 16

   17 bexpr: '(' bexpr . ')'

    ')'  shift, and go to state 36


State 17

   11 bexpr: expr . MEQUAL expr
   12      | expr . GEQUAL expr
   13      | expr . '<' expr
   14      | expr . '>' expr
   15      | expr . EQUAL expr
   16      | expr . NOTEQUAL expr
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | '(' expr . ')'

    EQUAL     shift, and go to state 21
    NOTEQUAL  shift, and go to state 22
    MEQUAL    shift, and go to state 23
    GEQUAL    shift, and go to state 24
    '+'       shift, and go to state 25
    '-'       shift, and go to state 26
    '*'       shift, and go to state 27
    '/'       shift, and go to state 28
    '%'       shift, and go to state 29
    ')'       shift, and go to state 37
    '<'       shift, and go to state 31
    '>'       shift, and go to state 32


State 18

    0 $accept: lines $end .

    $default  accept


State 19

    1 lines: lines line .

    $default  reduce using rule 1 (lines)


State 20

    7 line: bexpr '\n' .

    $default  reduce using rule 7 (line)


State 21

   15 bexpr: expr EQUAL . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 38


State 22

   16 bexpr: expr NOTEQUAL . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 39


State 23

   11 bexpr: expr MEQUAL . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 40


State 24

   12 bexpr: expr GEQUAL . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 41


State 25

   19 expr: expr '+' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 42


State 26

   20 expr: expr '-' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 43


State 27

   21 expr: expr '*' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 44


State 28

   22 expr: expr '/' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 45


State 29

   23 expr: expr '%' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 46


State 30

    5 line: expr '\n' .

    $default  reduce using rule 5 (line)


State 31

   13 bexpr: expr '<' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 47


State 32

   14 bexpr: expr '>' . expr

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 48


State 33

   24 expr: '(' . expr ')'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 49


State 34

    6 line: LETTER '=' expr . '\n'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'   shift, and go to state 25
    '-'   shift, and go to state 26
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '%'   shift, and go to state 29
    '\n'  shift, and go to state 50


State 35

   10 line: IF bexpr $@1 . THEN expr ELSE $@2 expr '\n'

    THEN  shift, and go to state 51


State 36

   17 bexpr: '(' bexpr ')' .

    $default  reduce using rule 17 (bexpr)


State 37

   24 expr: '(' expr ')' .

    $default  reduce using rule 24 (expr)


State 38

   15 bexpr: expr EQUAL expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 15 (bexpr)


State 39

   16 bexpr: expr NOTEQUAL expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 16 (bexpr)


State 40

   11 bexpr: expr MEQUAL expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 11 (bexpr)


State 41

   12 bexpr: expr GEQUAL expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 12 (bexpr)


State 42

   19 expr: expr . '+' expr
   19     | expr '+' expr .
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 19 (expr)


State 43

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   20     | expr '-' expr .
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 20 (expr)


State 44

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   21     | expr '*' expr .
   22     | expr . '/' expr
   23     | expr . '%' expr

    $default  reduce using rule 21 (expr)


State 45

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   22     | expr '/' expr .
   23     | expr . '%' expr

    $default  reduce using rule 22 (expr)


State 46

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   23     | expr '%' expr .

    $default  reduce using rule 23 (expr)


State 47

   13 bexpr: expr '<' expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 13 (bexpr)


State 48

   14 bexpr: expr '>' expr .
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29

    $default  reduce using rule 14 (bexpr)


State 49

   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr
   24     | '(' expr . ')'

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    '*'  shift, and go to state 27
    '/'  shift, and go to state 28
    '%'  shift, and go to state 29
    ')'  shift, and go to state 37


State 50

    6 line: LETTER '=' expr '\n' .

    $default  reduce using rule 6 (line)


State 51

   10 line: IF bexpr $@1 THEN . expr ELSE $@2 expr '\n'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 52


State 52

   10 line: IF bexpr $@1 THEN expr . ELSE $@2 expr '\n'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    ELSE  shift, and go to state 53
    '+'   shift, and go to state 25
    '-'   shift, and go to state 26
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '%'   shift, and go to state 29


State 53

   10 line: IF bexpr $@1 THEN expr ELSE . $@2 expr '\n'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 54


State 54

   10 line: IF bexpr $@1 THEN expr ELSE $@2 . expr '\n'

    INTEGER  shift, and go to state 1
    LETTER   shift, and go to state 13
    '('      shift, and go to state 33

    expr  go to state 55


State 55

   10 line: IF bexpr $@1 THEN expr ELSE $@2 expr . '\n'
   19 expr: expr . '+' expr
   20     | expr . '-' expr
   21     | expr . '*' expr
   22     | expr . '/' expr
   23     | expr . '%' expr

    '+'   shift, and go to state 25
    '-'   shift, and go to state 26
    '*'   shift, and go to state 27
    '/'   shift, and go to state 28
    '%'   shift, and go to state 29
    '\n'  shift, and go to state 56


State 56

   10 line: IF bexpr $@1 THEN expr ELSE $@2 expr '\n' .

    $default  reduce using rule 10 (line)
